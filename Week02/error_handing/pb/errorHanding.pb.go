// Code generated by protoc-gen-go. DO NOT EDIT.
// source: errorHanding.proto

package errorHanding

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetUserInfoReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserInfoReq) Reset()         { *m = GetUserInfoReq{} }
func (m *GetUserInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoReq) ProtoMessage()    {}
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a59919575e152cc, []int{0}
}

func (m *GetUserInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoReq.Unmarshal(m, b)
}
func (m *GetUserInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoReq.Marshal(b, m, deterministic)
}
func (m *GetUserInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoReq.Merge(m, src)
}
func (m *GetUserInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoReq.Size(m)
}
func (m *GetUserInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoReq proto.InternalMessageInfo

func (m *GetUserInfoReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetUserInfoRsp struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Age                  int32    `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserInfoRsp) Reset()         { *m = GetUserInfoRsp{} }
func (m *GetUserInfoRsp) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoRsp) ProtoMessage()    {}
func (*GetUserInfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a59919575e152cc, []int{1}
}

func (m *GetUserInfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoRsp.Unmarshal(m, b)
}
func (m *GetUserInfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoRsp.Marshal(b, m, deterministic)
}
func (m *GetUserInfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoRsp.Merge(m, src)
}
func (m *GetUserInfoRsp) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoRsp.Size(m)
}
func (m *GetUserInfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoRsp proto.InternalMessageInfo

func (m *GetUserInfoRsp) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetUserInfoRsp) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *GetUserInfoRsp) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func init() {
	proto.RegisterType((*GetUserInfoReq)(nil), "errorHanding.GetUserInfoReq")
	proto.RegisterType((*GetUserInfoRsp)(nil), "errorHanding.GetUserInfoRsp")
}

func init() { proto.RegisterFile("errorHanding.proto", fileDescriptor_9a59919575e152cc) }

var fileDescriptor_9a59919575e152cc = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0x2d, 0x2a, 0xca,
	0x2f, 0xf2, 0x48, 0xcc, 0x4b, 0xc9, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x41, 0x16, 0x53, 0xd2, 0xe0, 0xe2, 0x73, 0x4f, 0x2d, 0x09, 0x2d, 0x4e, 0x2d, 0xf2, 0xcc, 0x4b,
	0xcb, 0x0f, 0x4a, 0x2d, 0x14, 0x12, 0xe3, 0x62, 0x2b, 0x05, 0x71, 0x53, 0x24, 0x18, 0x15, 0x18,
	0x35, 0x38, 0x83, 0xa0, 0x3c, 0xa5, 0x30, 0x54, 0x95, 0xc5, 0x05, 0xb8, 0x54, 0x0a, 0x49, 0x71,
	0x71, 0x80, 0x58, 0x7e, 0x89, 0xb9, 0xa9, 0x12, 0x4c, 0x60, 0x19, 0x38, 0x5f, 0x48, 0x80, 0x8b,
	0x39, 0x31, 0x3d, 0x55, 0x82, 0x59, 0x81, 0x51, 0x83, 0x35, 0x08, 0xc4, 0x34, 0x8a, 0xe6, 0xe2,
	0x71, 0x45, 0x72, 0x91, 0x90, 0x37, 0x17, 0x37, 0x92, 0x3d, 0x42, 0x32, 0x7a, 0x28, 0x7e, 0x40,
	0x75, 0xac, 0x14, 0x1e, 0xd9, 0xe2, 0x02, 0x25, 0x06, 0x27, 0xbe, 0x28, 0x14, 0xef, 0x26, 0xb1,
	0x81, 0xc3, 0xc0, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xb9, 0x22, 0x2c, 0x19, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ErrorHandingClient is the client API for ErrorHanding service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ErrorHandingClient interface {
	GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoRsp, error)
}

type errorHandingClient struct {
	cc grpc.ClientConnInterface
}

func NewErrorHandingClient(cc grpc.ClientConnInterface) ErrorHandingClient {
	return &errorHandingClient{cc}
}

func (c *errorHandingClient) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoRsp, error) {
	out := new(GetUserInfoRsp)
	err := c.cc.Invoke(ctx, "/errorHanding.ErrorHanding/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ErrorHandingServer is the server API for ErrorHanding service.
type ErrorHandingServer interface {
	GetUserInfo(context.Context, *GetUserInfoReq) (*GetUserInfoRsp, error)
}

// UnimplementedErrorHandingServer can be embedded to have forward compatible implementations.
type UnimplementedErrorHandingServer struct {
}

func (*UnimplementedErrorHandingServer) GetUserInfo(ctx context.Context, req *GetUserInfoReq) (*GetUserInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}

func RegisterErrorHandingServer(s *grpc.Server, srv ErrorHandingServer) {
	s.RegisterService(&_ErrorHanding_serviceDesc, srv)
}

func _ErrorHanding_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ErrorHandingServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/errorHanding.ErrorHanding/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ErrorHandingServer).GetUserInfo(ctx, req.(*GetUserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ErrorHanding_serviceDesc = grpc.ServiceDesc{
	ServiceName: "errorHanding.ErrorHanding",
	HandlerType: (*ErrorHandingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _ErrorHanding_GetUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "errorHanding.proto",
}
